user root;
worker_processes 1;

events {
  worker_connections 1024;
}

http {
  include mime.types;
  include fastcgi.conf;
  default_type application/octet-stream;
  index index.html index.htm index.php;
  sendfile on;
  server_tokens off;

  # Proxy Conf
  proxy_redirect off;
  proxy_set_header Host $host;
  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
  proxy_set_header X-Real-IP $remote_addr;
  client_max_body_size 10m;
  client_body_buffer_size 128k;
  proxy_connect_timeout 90;
  proxy_send_timeout 90;
  proxy_read_timeout 90;
  proxy_buffers 32 4k;

  # The "auto_ssl" shared dict must be defined with enough storage space to
  # hold your certificate data.
  lua_shared_dict auto_ssl 1m;

  # The "auto_ssl_settings" shared dict is used to temporarily store various settings
  # like the secret used by the hook server on port 8999. Do not change or
  # omit it.
  lua_shared_dict auto_ssl_settings 64k;

  lua_ssl_trusted_certificate /etc/ssl/certs/ca-certificates.crt;

  # A DNS resolver must be defined for OSCP stapling to function.
  resolver 8.8.8.8;

  # Initial setup tasks.
  init_by_lua_block {
    auto_ssl = (require "resty.auto-ssl").new()
    --auto_ssl:set("ca", "https://acme-staging.api.letsencrypt.org/directory")
    auto_ssl:set("dir", "/certs")

    function is_valid_domain(domain)

      # only generate certs for subdomains of .mydomain.com
      if string.find(domain, ".mydomain.com") ~= nil then
        return false
      end

      return true

    end -- end function

    auto_ssl:set("allow_domain", function(domain)
      return is_valid_domain(domain)
    end)

    auto_ssl:init()
  }

  init_worker_by_lua_block {
    auto_ssl:init_worker()
  }

  # Default HTTPS server
  server {
    listen 443 http2 ssl;

    # Dynamic handler for issuing or returning certs for SNI domains.
    ssl_certificate_by_lua_block {
      auto_ssl:ssl_certificate()
    }

    index index.html index.htm;
    
    location / {
      root /var/www/default;
    }

    # Fallback self-signed cert
    ssl_certificate /etc/ssl/resty-auto-ssl-fallback.crt;
    ssl_certificate_key /etc/ssl/resty-auto-ssl-fallback.key;
  }

  # Default HTTP server (REQUIRED FOR AUTOSSL)
  server {
    listen 80;

    # Endpoint used for performing domain verification with Let's Encrypt.
    location /.well-known/acme-challenge/ {
      content_by_lua_block {
        auto_ssl:challenge_server()
      }
    }

    location / {
      return 301 https://$host$request_uri;
    }
  }

  # Internal server running on port 8999 for handling certificate tasks.
  server {
    listen 127.0.0.1:8999;
    
    # Increase the body buffer size, to ensure the internal POSTs can always
    # parse the full POST contents into memory.
    client_body_buffer_size 128k;
    client_max_body_size 128k;

    location / {
      content_by_lua_block {
        auto_ssl:hook_server()
      }
    }
  }

  include /usr/local/openresty/nginx/conf/apps/*.conf;
}